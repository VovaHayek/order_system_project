# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'system.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QHeaderView, QSizePolicy, QDesktopWidget
from PyQt5.QtCore import Qt, QTimer

import schedule
import requests
import time

class DictionaryTableModel(QtCore.QAbstractTableModel):
    def __init__(self, data, headers):
        super(DictionaryTableModel, self).__init__()
        self._data = data
        self._headers = headers

    def data(self, index, role):
        if role == Qt.DisplayRole:
            # Look up the key by header index.
            column = index.column()
            column_key = self._headers[column]
            if column_key == 'menu':
                menu = ', '.join(self._data[index.row()][column_key])
                return menu
            return self._data[index.row()][column_key]

    def rowCount(self, index):
        # The length of the outer list.
        return len(self._data)

    def columnCount(self, index):
        # The length of our headers.
        return len(self._headers)

    def headerData(self, section, orientation, role):
        # section is the index of the column/row.
        if role == Qt.DisplayRole:
            if orientation == Qt.Horizontal:
                if self._headers[section] == 'amount':
                    return str(self._headers[section] + ' $')
                return str(self._headers[section])

            if orientation == Qt.Vertical:
                return str(section)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1001, 701)
        MainWindow.showMaximized()
        self.g = QDesktopWidget().availableGeometry()
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(int(self.g.width()/2)-200, self.g.height()-(self.g.height()-10), 400, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(int(self.g.width()/2)-50, self.g.height()-(self.g.height()-50), 100, 30))
        self.pushButton.setObjectName("pushButton")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(25, 100, self.g.width()-200, self.g.height()-200))
        #self.frame.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.frame.move(100, 100)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.tableView = QtWidgets.QTableView(self.frame)
        self.tableView.setGeometry(QtCore.QRect(0, 0, self.g.width()-200, self.g.height()-200))
        self.tableView.setObjectName("tableView")
        self.tableView.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1001, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.rest_name = ''
        self.l = []
        self.headers = ['restaurant', 'amount', 'menu']

        self.timer=QTimer()
        self.timer.timeout.connect(self.update_data_in_table)
        self.timer.start(10000)

        self.show_rest_name()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))

    def show_rest_name(self):
        self.pushButton.clicked.connect(lambda: self.show_restaurant(self.lineEdit.text()))

    def show_restaurant(self, rest):
        self.l = []
        self.rest_name = rest
        self.response = requests.get(f'http://127.0.0.1:8000/get-order-data?restaurant={self.rest_name}')
        for index, data in self.response.json().items():
            self.l.append(data)       
        self.model = DictionaryTableModel(self.l, self.headers)
        self.tableView.setModel(self.model)
        self.tableView.horizontalHeader().setSectionResizeMode(0, QHeaderView.ResizeToContents)
        self.tableView.horizontalHeader().setSectionResizeMode(1, QHeaderView.ResizeToContents)
        self.tableView.horizontalHeader().setSectionResizeMode(2, QHeaderView.Stretch)
 
    def update_data_in_table(self):
        self.l = []
        self.response = requests.get(f'http://127.0.0.1:8000/get-order-data?restaurant={self.rest_name}')
        for index, data in self.response.json().items():
            self.l.append(data)
        self.model = DictionaryTableModel(self.l, self.headers)
        self.tableView.setModel(self.model)
        self.tableView.horizontalHeader().setSectionResizeMode(0, QHeaderView.ResizeToContents)
        self.tableView.horizontalHeader().setSectionResizeMode(1, QHeaderView.ResizeToContents)
        self.tableView.horizontalHeader().setSectionResizeMode(2, QHeaderView.Stretch)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
